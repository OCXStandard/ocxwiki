[project.urls]
"Homepage" = "https://github.com/OCXStandard/ocxwiki"
"Bug Tracker" = "https://github.com/OCXStandard/ocxwiki/issues"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ocxwiki"
version = "0.1.0"
description = ""
authors = ["ocastrup <ole.christain.astrup@dnv.com>"]
readme = "README.md"
packages = [{include = "ocxwiki"}]

[tool.poetry.dependencies]
python = "^3.10"
xsdata = "23.6"
ocx = "3.0.0a0"
ocx_schema_parser = "0.3.0"
spellchecker ="*"
dokuwiki = "*"
loguru = "*"
pyyaml = "*"
pytest = "^7.4.0"
sphinx = "*"
sphinx-autodoc-typehints = "*"
sphinx_rtd_theme = "*"
sphinx-click = "*"
tbump = "*"
dotenv = "*"

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/OCXStandard/ocxwiki"

[tool.tbump.version]
current = "0.1.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (\-
    (?P<extra>.+)
  )?
  '''

[[tool.tbump.field]]
# the name of the field
name = "extra"
# the default value to use, if there is no match
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "./ocxwiki/__init__.py"

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made


# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
